name: CI for WordPress with Playwright

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wordpress
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        options: >
          --health-cmd="mysqladmin ping -h localhost -u user --password=password"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          -v /docker/db/init:/docker-entrypoint-initdb.d

      wordpress:
        image: wordpress:latest
        ports:
          - 8080:80
        env:
          WORDPRESS_DB_HOST: db:3306
          WORDPRESS_DB_USER: user
          WORDPRESS_DB_PASSWORD: password
          WORDPRESS_DB_NAME: wordpress
          WP_ENVIRONMENT: development
          WP_DISABLE_COOKIE_CHECK: "true"
          COOKIE_DOMAIN: localhost
        options: >
          -v /wordpress/wp-content:/var/www/html/wp-content

      playwright:
        image: mcr.microsoft.com/playwright:v1.39.0-focal
        env:
          WP_URL: http://wordpress:80
        options: >
          --network-alias=playwright
          --entrypoint=""
        ports:
          - 9000:9000

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Esperar os serviços estarem prontos
      - name: Wait for WordPress
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080 > /dev/null; then
              echo "WordPress is up!"
              break
            fi
            echo "Waiting for WordPress..."
            sleep 5
          done

      # Instalar dependências do Playwright
      - name: Install Node Dependencies
        working-directory: playwright
        run: npm install

      - name: Run Playwright Tests
        env:
          WP_URL: http://localhost:8080
        run: docker exec -it playwright npx playwright test